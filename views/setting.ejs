<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/2.1.0/jquery.min.js"></script>
<!--    <link rel='stylesheet' href='/stylesheets/style.css' />-->

  <script type="text/javascript">
    $(function() {

      ///
      /// チーム情報アクセス
      ///
      // チーム一覧
      $("#getbutton").click( function(){
            get("/teams", $("#getresponse"));
        })

      // チーム情報追加
      $("#createbutton").click( function(){
          var JSONdata = {
              'tid': $("#tid").val(),
              'tname': $("#tname").val()
          };
//          alert(JSON.stringify(JSONdata));
          post("/teams", JSONdata, $("#createresponse"));
        })

      // チーム情報削除
      $("#removebutton").click( function(){
          var url = "/teams/" + $("#removetid").val();
          remove(url, $("#removeresponse"));
        })

      // チーム情報更新
      $("#updatebutton").click( function(){
          var url = "/teams/" + $("#tid").val();
          var JSONdata = {
              'tid': $("#tid").val(),
              'tname': $("#tname").val()
          };
//          alert(JSON.stringify(JSONdata));
          update(url, JSONdata, $("#createresponse"));
        })

      ///
      /// ホール情報アクセス
      ///
      // ホール情報一覧
      $("#getholebutton").click( function(){
          get("/holes", $("#getholeresponse"));
        })

      // ホール情報追加
      $("#createholebutton").click( function() {
          var namearray = csv2array($("#csubnames").val());
          var pararray = csv2array($("#pars").val());
          var JSONdata = {
              'csubid': $("#csubid").val(),
              'csubname': $("#csubname").val(),
              'names': namearray,
              'pars': pararray
          };
          post("/holes", JSONdata, $("#createholeresponse"));
        })

      // ホール情報削除
      $("#removeholebutton").click( function() {
          var url = "/holes/" + $("#removeholeid").val();
          remove(url, $("#removeholeresponse"));
        })

      // ホール情報更新
      $("#updateholebutton").click( function(){
          var url = "/holes/" + $("#csubid").val();
          var namearray = csv2array($("#csubnames").val());
          var pararray = csv2array($("#pars").val());
          var JSONdata = {
              'csubid': $("#csubid").val(),
              'csubname': $("#csubname").val(),
              'names': namearray,
              'pars': pararray
          };
          update(url, JSONdata, $("#createholeresponse"));
        })

      ///
      /// コース情報アクセス
      ///
      // 一覧取得
      $("#getcoursebutton").click( function(){
          get("/courses", $("#getcourseresponse"));
        })

      // 追加
      $("#createcoursebutton").click( function() {
          var holeinfarray = csv2array($("#holeinfs").val());
          var JSONdata = {
              'cid': $("#cid").val(),
              'cname': $("#cname").val(),
              'holeinfs': holeinfarray
          };
          post("/courses", JSONdata, $("#createcourseresponse"));
        })

      // 削除
      $("#removecoursebutton").click( function() {
          var url = "/courses/" + $("#removecid").val();
          remove(url, $("#removecourseresponse"));
        })

      // 更新
      $("#updatecoursebutton").click( function() {
          var url = "/courses/" + $("#cid").val();
          var holeinfarray = csv2array($("#holeinfs").val());
          var JSONdata = {
              'cid': $("#cid").val(),
              'cname': $("#cname").val(),
              'holeinfs': holeinfarray
          };
          update(url, JSONdata, $("#createcourseresponse"));
        })

      ///
      /// ユーザー情報アクセス
      ///
      // 一覧取得
      $("#getuserbutton").click( function(){
          get("/users", $("#getuserresponse"));
        })

      // 追加
      $("#createuserbutton").click( function() {
          var JSONdata = {
              'uid': $("#uid").val(),
              'uname': $("#uname").val(),
              'brthdy': $("#brthdy").val(),
              'mail': $("#mail").val(),
              'sex': $("#sex").val(),
// TODO: uimg
          };
          post("/users", JSONdata, $("#createuserresponse"));
        })

      // 削除
      $("#removeuserbutton").click( function() {
          var url = "/users/" + $("#removeuid").val();
          remove(url, $("#removeuserresponse"));
        })

      // 更新
      $("#updateuserbutton").click( function() {
          var url = "/users/" + $("#uid").val();
          var JSONdata = {
              'uid': $("#uid").val(),
              'uname': $("#uname").val(),
              'brthdy': $("#brthdy").val(),
              'mail': $("#mail").val(),
              'sex': $("#sex").val(),
// TODO: uimg
          };
          update(url, JSONdata, $("#createuserresponse"));
        })

      ///
      /// プレーヤー情報アクセス
      ///
      // 一覧取得
      $("#getplayerbutton").click( function(){
          get("/players", $("#getplayerresponse"));
        })

      // 追加
      $("#createplayerbutton").click( function() {
          var csubarray = csv2array($("#player-csubids").val());
          var JSONdata = {
            'plid': $("#plid").val(),
            'rid': $("#player-rid").val(),
            'uid': $("#player-uid").val(),
            'tid': $("#player-tid").val(),
            'csubids': csubarray
          };
          post("/players", JSONdata, $("#createplayerresponse"));
        })

      // 削除
      $("#removeplayerbutton").click( function() {
          var url = "/players/" + $("#removeplid").val();
          remove(url, $("#removeplayerresponse"));
        })

      // 更新
      $("#updateplayerbutton").click( function() {
          var url = "/players/" + $("#plid").val();
          var csubarray = csv2array($("#player-csubids").val());
          var JSONdata = {
            'rid': $("#player-rid").val(),
            'uid': $("#player-uid").val(),
            'tid': $("#player-tid").val(),
            'csubids': csubarray
          };
          update(url, JSONdata, $("#createplayerresponse"));
        })

      ///
      /// ラウンド情報アクセス
      ///
      // 一覧取得
      $("#getroundbutton").click( function(){
          get("/rounds", $("#getroundresponse"));
        })

      // 追加
      $("#createroundbutton").click( function() {
          var handicapinf = { 'method' : parseInt($("#handicapinf-method").val()), 'upperLimit': parseInt($("#handicapinf-upperlimit").val()) };
          var prtyifs = JSON.parse($("#prtyifs").val());
          var JSONdata = {
            'rid': $("#rid").val(),
            'rname': $("#rname").val(),
            'cid': $("#round-cid").val(),
            'csubids': $("#round-csubids").val(),
            'handicapinf': handicapinf,
            'prtyifs': prtyifs,
            'date': $("#round-date").val(),
          };
          post("/rounds", JSONdata, $("#createroundresponse"));
        })

      // 削除
      $("#removeroundbutton").click( function() {
          var url = "/rounds/" + $("#removerid").val();
          remove(url, $("#removeroundresponse"));
        })

      // 更新
      $("#updateroundbutton").click( function() {
          var url = "/rounds/" + $("#rid").val();
          var handicapinf = { 'method' : parseInt($("#handicapinf-method").val()), 'upperLimit': parseInt($("#handicapinf-upperlimit").val()) };
          var prtyifs = JSON.parse($("#prtyifs").val());
          var JSONdata = {
            'rname': $("#rname").val(),
            'cid': $("#round-cid").val(),
            'csubids': $("#round-csubids").val(),
            'handicapinf': handicapinf,
            'prtyifs': prtyifs,
            'date': $("#round-date").val(),
          };
          update(url, JSONdata, $("#createroundresponse"));
        })
    })

    // 一覧取得
    function get(url, resultElem) {
      $.ajax({
          type : 'get',
          url : url,
          scriptCharset: 'utf-8',
          success : function(data) {
              // Success
              resultElem.html(JSON.stringify(data));
          },
          error : function(data) {
              // Error
              alert("error");
              alert(JSON.stringify(data));
              resultElem.html(JSON.stringify(data));
          }
      });
    }
    // 追加
    function post(url, body, resultElem) {
      $.ajax({
          type : 'post',
          url : url,
          data : JSON.stringify(body),
          contentType: 'application/json',
          dataType : 'json',
          scriptCharset: 'utf-8',
          success : function(data) {
              // Success
              resultElem.html(JSON.stringify(data));
          },
          error : function(data) {
              // Error
              alert("error");
              alert(JSON.stringify(data));
              resultElem.html(JSON.stringify(data));
          }
      });
    }
    // 更新
    function update(url, body, resultElem) {
      $.ajax({
          type : 'put',
          url : url,
          data : JSON.stringify(body),
          contentType: 'application/json',
          dataType : 'json',
          scriptCharset: 'utf-8',
          success : function(data) {
              // Success
              resultElem.html(JSON.stringify(data));
          },
          error : function(data) {
              // Error
              alert("error");
              alert(JSON.stringify(data));
              resultElem.html(JSON.stringify(data));
          }
      });
    }
    // 削除
    function remove(url, resultElem) {
      $.ajax({
          type : 'delete',
          url : url,
          scriptCharset: 'utf-8',
          success : function(data) {
              // Success
              resultElem.html(JSON.stringify(data));
          },
          error : function(data) {
              // Error
              alert("error");
              alert(JSON.stringify(data));
              resultElem.html(JSON.stringify(data));
          }
      });
    }

    // csv2array
    function csv2array(str) {
      str = str.replace( /\r\n/g , "\n" );        // IE対策　改行コード\r\nを\rに変換
      str = str.replace( /^(\n+)|(\n+)$/g , "" ); // 文頭と文末の余計な改行を除去

      var data = [];
      var reg = /[,\t]/g;   // タブまたはカンマで分割
      data = str.split( reg );
      for( var i = 0 , m = data.length; i < m; i++ ) { // trimも同時に行っておく
    		data[i] = data[i].replace( /(^\s+)|(\s+$)/g , ""  );
      }
      return data;
    }
  </script>

  </head>
  <body>
    <h1><%= title %></h1>
    <hr>
    <h2>ベースURL</h2>
    http://wakuwaku.c.node-ninja.com:3000/
    <br><br>
<!--
  ホール情報アクセス
-->
    <hr>
    <h2>ホール情報一覧</h2>
<p>
http method : <b>GET</b><br>
uri : <b>/holes</b><br>
</p>
    <p><button id="getholebutton" type="button">一覧取得</button></p>
    <textarea id="getholeresponse" cols=100 rows=10 disabled></textarea>

    <hr>
    <h2>ホール情報追加／更新</h2>
<p>
・追加<br>
　http method : <b>POST</b><br>
　uri : <b>/holes</b><br>
・更新<br>
　http method : <b>PUT</b><br>
　uri : <b>/holes</b><br>
・body指定例<br>
　{ "csubid": "c001cs01", "csubname": "IN", "names": [ "01H", "02H", "03H", "04H", "05H", "06H", "07H", "08H", "09H" ], "pars": [ 4, 3, 4, 5, 4, 5, 3, 4, 4 ] }
</p>
    <p>csubid: <input type="text" id="csubid" size="30" value="c100cs01"></p>
    <p>csubname: <input type="text" id="csubname" size="30" value="IN"></p>
    <p>names: <input type="text" id="csubnames" size="100" value="01H,02H,03H,04H,05H,06H,07H,08H,09H"></p>
    <p>pars: <input type="text" id="pars" size="100" value="4, 3, 4, 5, 4, 5, 3, 4, 4"></p>
    <p><button id="createholebutton" type="button">追加</button></p>
    <p><button id="updateholebutton" type="button">更新</button></p>
    <textarea id="createholeresponse" cols=100 rows=10 disabled></textarea>

    <hr>
    <h2>ホール情報削除</h2>
<p>
http method : <b>DELETE</b><br>
uri :  <b>/holes/:csubid</b><br>
　　:csubid にコースサブIDを指定する
</p>
    <p>csubid: <input type="text" id="removeholeid" size="30" value="c100cs01"></p>
    <p><button id="removeholebutton" type="button">削除</button></p>
    <textarea id="removeholeresponse" cols=100 rows=10 disabled></textarea>

    <hr>
    <h2>コース情報一覧</h2>
<p>
http method : <b>GET</b><br>
uri : <b>/courses</b>
</p>
    <p><button id="getcoursebutton" type="button">一覧取得</button></p>
    <textarea id="getcourseresponse" cols=100 rows=10 disabled></textarea>

    <hr>
    <h2>コース情報追加／更新</h2>
<p>
・追加<br>
　http method : <b>POST</b><br>
　uri : <b>/courses</b><br>
・更新<br>
　http method : <b>PUT</b><br>
　uri : <b>/courses</b><br>
・body例：<br>
　{ "cid": "c100", "cname": "ＰＳＷ７２ゴルフ倶楽部", "holeinfs": [ "c100cs01", "c100cs02", "c100cs03", "c100cs04", "c100cs05", "c100cs06", "c100cs07", "c100cs08" ] }
</p>
    <p>cid: <input type="text" id="cid" size="30" value="c100"></p>
    <p>cname: <input type="text" id="cname" size="30" value="ＰＳＷ７２ゴルフ倶楽部"></p>
    <p>holeinfs: <input type="text" id="holeinfs" size="100" value="c100cs01, c100cs02, c100cs03, c100cs04, c100cs05, c100cs06, c100cs07, c100cs08"></p>
    <p><button id="createcoursebutton" type="button">追加</button></p>
    <p><button id="updatecoursebutton" type="button">更新</button></p>
    <textarea id="createcourseresponse" cols=100 rows=10 disabled></textarea>

    <hr>
    <h2>コース情報削除</h2>
<p>
http method : <b>DELETE</b><br>
uri : <b>/courses/:cid</b><br>
　　:cid にコースID cid を指定する
</p>
    <p>cid: <input type="text" id="removecid" size="30" value="c100"></p>
    <p><button id="removecoursebutton" type="button">削除</button></p>
    <textarea id="removecourseresponse" cols=100 rows=10 disabled></textarea>

    <hr>
    <h2>ユーザー情報一覧</h2>
<p>
http method : <b>GET</b><br>
uri : <b>/users</b>
</p>
    <p><button id="getuserbutton" type="button">一覧取得</button></p>
    <textarea id="getuserresponse" cols=100 rows=10 disabled></textarea>

    <hr>
    <h2>ユーザー情報追加／更新</h2>
<p>
・追加<br>
　http method : <b>POST</b><br>
　uri : <b>/users</b><br>
・更新<br>
　http method ： <b>PUT</b><br>
　uri : <b>/users</b><br>
・body例：<br>
　{ "uid" : "u1000", "uname" : "ＰＳＷ　飛び男", "brthdy" : "2000-01-01", "mail" : "hoge@hoge.com", "sex" : 1, "uimg" : "" }
</p>
    <p>uid: <input type="text" id="uid" size="30" value="u1000"></p>
    <p>uname: <input type="text" id="uname" size="30" value="ＰＳＷ　飛び男"></p>
    <p>brthdy: <input type="text" id="brthdy" size="30" value="2000-01-01"></p>
    <p>mail: <input type="text" id="mail" size="30" value="hoge@hoge.com"></p>
    <p>sex: <input type="text" id="sex" size="30" value="1"></p>
    <p>uimg: not supported.</p>
    <p><button id="createuserbutton" type="button">追加</button></p>
    <p><button id="updateuserbutton" type="button">更新</button></p>
    <textarea id="createuserresponse" cols=100 rows=10 disabled></textarea>

    <hr>
    <h2>ユーザー情報削除</h2>
<p>
http method : <b>DELETE</b><br>
uri : <b>/users/:uid</b><br>
　　:uid にユーザーID uid を指定する
</p>
    <p>uid: <input type="text" id="removeuid" size="30" value="u1000"></p>
    <p><button id="removeuserbutton" type="button">削除</button></p>
    <textarea id="removeuserresponse" cols=100 rows=10 disabled></textarea>

    <hr>
    <h2>チーム情報一覧</h2>
<p>
http method : <b>GET</b><br>
uri : <b>/teams</b>
</p>
    <p><button id="getbutton" type="button">一覧取得</button></p>
    <textarea id="getresponse" cols=100 rows=10 disabled></textarea>

    <hr>
    <h2>チーム情報追加／更新</h2>
<p>
・追加<br>
　http method <b>POST</b><br>
　uri : <b>/teams</b><br>
・更新<br>
　http method : <b>PUT</b><br>
　uri : <b>/teams</b><br>
・body例：<br>
　{ "tid" : "t100", "tname" : "最強チーム", "timg" : "" }
</p>
    <p>tid: <input type="text" id="tid" size="30" value="t100"></p>
    <p>tname: <input type="text" id="tname" size="30" value="最強チーム"></p>
    <p><button id="createbutton" type="button">追加</button></p>
    <p><button id="updatebutton" type="button">更新</button></p>
    <textarea id="createresponse" cols=100 rows=10 disabled></textarea>

    <hr>
    <h2>チーム情報削除</h2>
<p>
http method : <b>DELETE</b><br>
uri : <b>/teams/:tid</b><br>
　　:tid にチームID tid を指定する
</p>
    <p>tid: <input type="text" id="removetid" size="30" value="t001"></p>
    <p><button id="removebutton" type="button">削除</button></p>
    <textarea id="removeresponse" cols=100 rows=10 disabled></textarea>

    <hr>
    <h2>プレーヤー情報一覧</h2>
<p>
http method : <b>GET</b><br>
uri : <b>/players</b>
</p>
    <p><button id="getplayerbutton" type="button">一覧取得</button></p>
    <textarea id="getplayerresponse" cols=100 rows=10 disabled></textarea>

    <hr>
    <h2>プレーヤー情報追加／更新</h2>
<p>
・追加<br>
　http method : <b>POST</b><br>
　uri : <b>/players</b><br>
・更新<br>
　http method : <b>PUT</b>
　uri : <b>/players</b><br>
・body例：<br>
　{ "plid" : "pl1000", "rid" : "r1000", "uid" : "u1000", "tid" : "t1000", "csubids" : [ "c1000cs01", "c1000cs02" ] }
</p>
    <p>plid: <input type="text" id="plid" size="30" value="pl1000"></p>
    <p>uid: <input type="text" id="player-uid" size="30" value="u1000"></p>
    <p>rid: <input type="text" id="player-rid" size="30" value="r1000"></p>
    <p>tid: <input type="text" id="player-tid" size="30" value="t1000"></p>
    <p>csubids: <input type="text" id="player-csubids" size="100" value="c1000cs01, c1000cs02"></p>
    <p><button id="createplayerbutton" type="button">追加</button></p>
    <p><button id="updateplayerbutton" type="button">更新</button></p>
    <textarea id="createplayerresponse" cols=100 rows=10 disabled></textarea>

    <hr>
    <h2>プレーヤー情報削除</h2>
<p>
http method : <b>DELETE</b><br>
uri : <b>/players/:plid</b><br>
　　:plid にプレーヤーID plid を指定する
</p>
    <p>plid: <input type="text" id="removeplid" size="30" value="pl1000"></p>
    <p><button id="removeplayerbutton" type="button">削除</button></p>
    <textarea id="removeplayerresponse" cols=100 rows=10 disabled></textarea>

    <hr>
    <h2>ラウンド情報一覧</h2>
<p>
http method : <b>GET</b><br>
uri : <b>/rounds</b>
</p>
    <p><button id="getroundbutton" type="button">一覧取得</button></p>
    <textarea id="getroundresponse" cols=100 rows=10 disabled></textarea>

    <hr>
    <h2>ラウンド情報追加／更新</h2>
<p>
・追加<br>
　http method : <b>POST</b>
　uri : <b>/rounds</b><br>
・更新<br>
　http method : <b>PUT</b>
　uri : <b>/rounds</b><br>
・body例：<br>
　{ "rid": "r1000", "rname": "第１回　ＰＳＷオープン 20YY/MM/DD", "cid": "c100", "csubids": [ "c100cs01", "c100cs02" ], "handicapinf": { "method": 2, "upperLimit": 36 }, "prtyifs": [ { "cid": "c100", "csubids": [ "c100cs01", "c100cs02" ], "number": 1, "pid": "party01", "plyrifs": [ "pl1000", "pl1001", "pl1002", "pl1003" ], "pname": "1組目", "rid": "r1000" }], "date": { "$date": 1382140800 } }
</p>
    <p>rid: <input type="text" id="rid" size="30" value="r1000"></p>
    <p>rname: <input type="text" id="rname" size="30" value="ＰＳＷオープン"></p>
    <p>cid: <input type="text" id="round-cid" size="30" value="c1000"></p>
    <p>csubids: <input type="text" id="round-csubids" size="30" value="c100cs01, c100cs02"></p>
    <p>handicapinf-method: <input type="text" id="handicapinf-method" size="30" value="2"></p>
    <p>handicapinf-upperLimit: <input type="text" id="handicapinf-upperlimit" size="30" value="36"></p>
<!--    <p>date: <input type="text" id="round-date" size="30" value=""></p>-->
    <p>prtyifs:</p>
    <textarea id="prtyifs" cols=100 rows=20>
[
  {
    "cid": "c100", 
    "csubids": [
        "c100cs01", 
        "c100cs02"
    ], 
    "number": 1, 
    "pid": "party01", 
    "plyrifs": [
        "pl1000", 
        "pl1001", 
        "pl1002", 
        "pl1003"
    ], 
    "pname": "1組目", 
    "rid": "r1000"
  }
]
</textarea>
    <p>date: not supported.</p>
    <p><button id="createroundbutton" type="button">追加</button></p>
    <p><button id="updateroundbutton" type="button">更新</button></p>
    <textarea id="createroundresponse" cols=100 rows=10 disabled></textarea>

    <hr>
    <h2>ラウンド情報削除</h2>
<p>
DELETE /rounds/:rid<br>
:rid にラウンドID rid を指定する
</p>
    <p>rid: <input type="text" id="removerid" size="30" value="r1000"></p>
    <p><button id="removeroundbutton" type="button">削除</button></p>
    <textarea id="removeroundresponse" cols=100 rows=10 disabled></textarea>

  </body>
</html>